type Field {
    _id: ID!
    name: String
    type: String
    udt_name: String
    is_nullable: Boolean
    gql_type: String
}

union TypeOrEnum = Type | EnumType

type EnumType {
    _id: ID!
    db: Database
    basedOnTable: String
    typeName: String
    fields: [String]
}

type Type {
    _id: ID!
    db: Database
    basedOnTable: String
    typeName: String
    fields: [Field]
		index: [String]
}

type Database {
    _id: ID!
    name: String
    host: String
}

type Query {
    getDb (id: ID!): Database
    getDbs: [Database]
    getType (id: ID!): Type
    getTypes: [Type]
}
